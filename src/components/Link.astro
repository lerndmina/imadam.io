---
interface Props {
  text?: string;
  href: string;
  extraclasses?: string;
  onclick?: string;
  newtab?: boolean;
  id?: string;
  target?: string; // We ignore this prop as we will set it based on the domain.
  rel?: string;
}
var { text, href, extraclasses, onclick, newtab = true, id, rel } = Astro.props as Props;

export const linkStyles = `bg-gradient-to-r from-notwhite to-notwhite hover:from-gradient1 hover:to-gradient2 text-transparent bg-clip-text link`;

const linkClasses = `${linkStyles}${extraclasses ? ` ${extraclasses}` : ""}`;

// If domain exists and is not homeurl then open in new tab.
const homeUrl = "lerndmina.dev";
var target;

const regex = "^(https?://)?(www.)?([^/]+)";
const found = href.match(regex);

if (found && found[3] != homeUrl) {
  if (newtab) {
    target = "_blank";
  }
}
---

<a rel={rel} onclick={onclick} target={target} class={linkStyles} href={href} id={id}><slot>{text}</slot></a>
