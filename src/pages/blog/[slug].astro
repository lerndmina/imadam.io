---
import MainLayout from "../../layouts/MainLayout.astro";
import Link, { linkStyles } from "../../components/Link.astro";
import { PB_URL } from "../../utils/clientside-data";
import PocketBase from "pocketbase";
import { PocketBasePost } from "../../utils/types";
import { formatBlogPosts, slugify, formatDate } from "../../utils/utils";
import { getPostAuthor, getPostImageUrl } from "../../components/PostCard.astro";
import Image from "astro/components/Image.astro";
import Prism from "prismjs";
import "prismjs/themes/prism-tomorrow.css";

const pb = new PocketBase(PB_URL);

const paths = Astro.url.pathname.split("/").filter(Boolean);
const postString = paths[paths.length - 1];
const postId = postString.split("-")[0];
const post = (await pb.collection("posts").getOne(postId, { expand: "category" })) as PocketBasePost;
const author = await getPostAuthor(pb, post);
const category = post.expand.category.name;
const image = getPostImageUrl(PB_URL, post, 1000);
const codeLang = post.code_lang ? post.code_lang : "js";

post.content = post.content.replace(/<code\s[^>]*>/g, () => `<code lang="${codeLang}" theme="dark-plus">`);
post.content = post.content.replace(/<a href/g, `<a class="${linkStyles}" href`);
---

<MainLayout title={post.title} description={post.description}>
  <div class="max-w-4xl m-auto">
    <header>
      <div class="mx-auto pb-10 container text-center">
        <h1 class="text-5xl pb-1" transition:name={"title-" + post.slug}>{post.title}</h1>
        <p class="text-md" transition:name={"author-" + post.slug}>
          by <Link href={`/blog/author/${slugify(author)}/`} text={author} /> â€¢ {formatDate(post.date)}
        </p>
        <small class="text-sm">
          <Link href={`/blog/category/${slugify(category)}/`} text={`# ${category}`} />
        </small>
      </div>
    </header>
    <div class="flex justify-center rounded-md overflow-hidden mx-auto p-10 pt-20">
      {post.image ? <Image width={500} height={500} class="drop-shadow-lg" src={image} alt={post.imageTitle ? post.imageTitle : post.description || "Header Image"} title={post.imageTitle ? post.imageTitle : post.description} transition:name={"img-" + post.slug} format={"avif"} /> : ""}
    </div>
    <div class="flex justify-center sm:px-8 px-16">
      <div class="content prose prose-invert">
        <p set:html={post.content} />
        <!-- {post.content} -->
      </div>
    </div>
  </div>
</MainLayout>
